# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String 
}

type Mutation {
createItem(title:String description:String price:Int image:String largeImage: String): Item!
updateItem(id: ID! title:String description:String price:Int): Item! 
deleteItem(id: ID!): Item
signup(email: String! password:String! name:String): User!
signin(email: String! password:String!): User!
signout: SuccessMessage
}

# the items query was modified to take couple of args to filter for pagination
# the where arg is useful for when u want to search for items

type Query {
 items(where: ItemWhereInput orderBy: ItemOrderByInput skip:Int first: Int): [Item]!
 item(where: ItemWhereUniqueInput!): Item #fetch single item and edit
 itemsConnection(where: ItemWhereInput): ItemConnection! #returns the aggregate for pagination
 me: User
}

